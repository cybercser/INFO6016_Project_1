#include <cstdio>
#include <random>

#include "client.h"

// Need to link Ws2_32.lib
#pragma comment(lib, "Ws2_32.lib")

#define DEFAULT_PORT 5555

// this snippet is generated by Codeium
std::string MumboJumbo() {
    // Define the subjects and adjectives
    std::vector<std::string> subjects = {"The cat", "The dog", "The bird"};
    std::vector<std::string> adjectives = {"happy", "playful", "cute"};

    // Randomly select a subject and an adjective
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> subjectDist(0, subjects.size() - 1);
    std::uniform_int_distribution<> adjectiveDist(0, adjectives.size() - 1);

    std::string subject = subjects[subjectDist(gen)];
    std::string adjective = adjectives[adjectiveDist(gen)];

    // Form the sentence
    std::string sentence = subject + " is " + adjective;

    return sentence;
}

int main(int argc, char** argv) {
    std::string userName{"Fan"};
    std::string password{"Fanshawe"};

    if (argc > 2) {
        userName = argv[1];
        password = argv[2];
    }

    ChatRoomClient client{"127.0.0.1", DEFAULT_PORT};

    client.ReqLogin(userName, password);
    client.RecvResponse();
    getchar();

    // join #graphics
    client.ReqJoinRoom("graphics");
    client.RecvResponse();
    getchar();

    // join #network
    client.ReqJoinRoom("network");
    client.RecvResponse();
    getchar();

    // leave #graphics
    client.ReqLeaveRoom("graphics");
    client.RecvResponse();
    getchar();

    // chat in #network
    client.ReqChatInRoom("network", MumboJumbo());
    client.RecvResponse();
    getchar();

    // leave #network
    client.ReqLeaveRoom("network");
    client.RecvResponse();
    getchar();

    return 0;
}
